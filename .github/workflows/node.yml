# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node & NEXT CI

# 触发workflow的条件
on:
  push:
    branches: ["master"]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.18.2]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
        #缓存依赖
      - name: Cache nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # 需要缓存的文件的路径
          path: |
            ./node_modules
            .next/cache
          # 对缓存的文件指定的唯一标识
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # 用于没有再找目标key的缓存的backup选项
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      # 装依赖
      - name: Install
        run: |
          npm install -g yarn@1.22.19
          yarn install

      # 打包
      - name: Build
        run: |
          yarn build
        # touch ./out/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

      # 部署
      # - name: Deploy
      #   uses: JamesIves/github-pages-deploy-action@releases/v4
      #   with:
      #     token: ${{ secrets.TOKEN }}
      #     branch: gh-pages
      #     folder: out # npm run build 生成静态资源的路径

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
