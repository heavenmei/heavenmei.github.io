{
  "version": 3,
  "sources": ["../../../contentlayer.config.js", "../../../src/lib/rehype-pre-raw.js"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer/source-files';\nimport remarkGfm from 'remark-gfm';\nimport rehypePrettyCode from 'rehype-pretty-code';\nimport remarkCodeTitles from 'remark-flexible-code-titles';\nimport { preProcess, postProcess } from './src/lib/rehype-pre-raw';\n\nconst commonFields = {\n  slug: {\n    type: 'string',\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\n  },\n  slugAsParams: {\n    type: 'string',\n    resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\n  },\n};\n\nexport const Post = defineDocumentType(() => ({\n  name: 'Post',\n  filePathPattern: `**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    url: { type: 'string', required: false },\n    titleAlt: { type: 'string', required: false },\n    description: { type: 'string', required: false },\n    descriptionAlt: { type: 'string', required: false },\n    date: { type: 'date', required: false },\n  },\n  computedFields: {\n    id: {\n      type: 'string',\n      resolve: (item) =>\n        item._raw.sourceFileName.split('_').slice(1).join('_').split('.')[0],\n    },\n    ...commonFields,\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: 'content',\n  contentDirExclude: ['ZtTemplates', '.trash', '.obsidian'],\n  documentTypes: [Post],\n  mdx: {\n    remarkPlugins: [\n      remarkGfm,\n      [\n        remarkCodeTitles,\n        {\n          titleTagName: 'CodeBlockTitle',\n          titleClassName: 'custom-code-title',\n          titleProperties: (language, title) => ({\n            ['data-language']: language,\n            title,\n          }),\n        },\n      ],\n    ],\n    // TODO: fix postProcess\n    rehypePlugins: [\n      preProcess,\n      [\n        rehypePrettyCode,\n        {\n          theme: 'github-dark',\n        },\n      ],\n      postProcess,\n    ],\n  },\n});\n", "import { visit } from 'unist-util-visit';\n\nexport const preProcess = () => (tree) => {\n  visit(tree, (node) => {\n    if (node?.type === 'element' && node?.tagName === 'pre') {\n      const [codeEl] = node.children;\n\n      if (codeEl.tagName !== 'code') return;\n      node.properties.raw = codeEl.children?.[0].value;\n      // console.log('\uD83D\uDEA8 preProcess ~', node);\n    }\n  });\n};\n\nexport const postProcess = () => (tree) => {\n  visit(tree, 'element', (node) => {\n    if (node?.type === 'element' && node?.tagName === 'pre') {\n      node.properties['raw'] = node.raw;\n      console.log('\uD83D\uDEA8 postProcess ~', node);\n    }\n  });\n};\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,sBAAsB;;;ACH7B,SAAS,aAAa;AAEf,IAAM,aAAa,MAAM,CAAC,SAAS;AACxC,QAAM,MAAM,CAAC,SAAS;AACpB,QAAI,MAAM,SAAS,aAAa,MAAM,YAAY,OAAO;AACvD,YAAM,CAAC,MAAM,IAAI,KAAK;AAEtB,UAAI,OAAO,YAAY;AAAQ;AAC/B,WAAK,WAAW,MAAM,OAAO,WAAW,CAAC,EAAE;AAAA,IAE7C;AAAA,EACF,CAAC;AACH;AAEO,IAAM,cAAc,MAAM,CAAC,SAAS;AACzC,QAAM,MAAM,WAAW,CAAC,SAAS;AAC/B,QAAI,MAAM,SAAS,aAAa,MAAM,YAAY,OAAO;AACvD,WAAK,WAAW,KAAK,IAAI,KAAK;AAC9B,cAAQ,IAAI,2BAAoB,IAAI;AAAA,IACtC;AAAA,EACF,CAAC;AACH;;;ADfA,IAAM,eAAe;AAAA,EACnB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,EAC9C;AAAA,EACA,cAAc;AAAA,IACZ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,KAAK,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IACvC,UAAU,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC5C,aAAa,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAC/C,gBAAgB,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,IAClD,MAAM,EAAE,MAAM,QAAQ,UAAU,MAAM;AAAA,EACxC;AAAA,EACA,gBAAgB;AAAA,IACd,IAAI;AAAA,MACF,MAAM;AAAA,MACN,SAAS,CAAC,SACR,KAAK,KAAK,eAAe,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,MAAM,GAAG,EAAE,CAAC;AAAA,IACvE;AAAA,IACA,GAAG;AAAA,EACL;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,mBAAmB,CAAC,eAAe,UAAU,WAAW;AAAA,EACxD,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,cAAc;AAAA,UACd,gBAAgB;AAAA,UAChB,iBAAiB,CAAC,UAAU,WAAW;AAAA,YACrC,CAAC,eAAe,GAAG;AAAA,YACnB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA,IAEA,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
