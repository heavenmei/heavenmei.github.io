{
  "title": "使用pont实现swagger文档生成ts响应类型",
  "url": "/2023-12-28-pont-apiDoc",
  "date": "2023-12-28T00:00:00.000Z",
  "body": {
    "raw": "https://blog.csdn.net/m0_65035567/article/details/130278459\n\n> 之前用过字节的ferry， 可以很方便讲thrift文件转成.d.ts类型定义和接口请求文件。但是ferry现在不开源，找到pont，可以把swagger转成ts。尝试接入现有的项目中\n\n## pont\npont是阿里出的一个工具，它可以非常方便的把后端的swagger文档转成ts提示类型，不仅如此，它还支持添加模板，直接生成对应的接口请求，甚至能帮我们生成请求参数的默认基类。\n\nGithub：[github.com/alibaba/pon…](https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Falibaba%2Fpont \"https://github.com/alibaba/pont\")\n\n## usage\n1. 全局安装 `yarn add -D pont-engine`\n2. 安装 vscode 插件 pont 以获取 pont 的全部能力\n3. 进入项目目录，在项目中安装 pont-engine\n4. 新建`pont-config.json`， 也可以`pont start`按照提示生成。 [配置参考](https://github.com/alibaba/pont/blob/master/docs/pontConfig.md)\n5. 新建`pontTemplate.ts` 生成自定义接口代码\n\n## API\n### cmd\n\n> 很奇怪，竟然没有代码生成的命令，只能利用vscode插件生成完成之后利用updateMod去更新\n\n\n\n|  cmd |  description |\n|---|---|\n|pont start|一键接入 pont，若本地存在 [pont-config.json](https://github.com/alibaba/pont/blob/master/docs/pontConfig.md)配置文件，将覆盖重复的配置项|\n|pont check|校验本地的 pont-lock.json 文件是否缺失、损坏。建议用户在项目中，在 pre-commit 里加上 pont check 命令，以防止在团队协作过程中，pont-lock.json 被误删、解决该文件冲突时被损坏等情况|\n|pont scan|扫描未使用的接口，在 process.cwd()位置生成并写入 unusedRequests.json 文件，需要配置 scannedRange。请参考 [pont-config.json 配置项](https://github.com/alibaba/pont/blob/master/docs/pontConfig.md)|\n|pont ls|查看所有数据源|\n|pont select [dsName]|切换当前数据源|\n|pont diff|查看远程数据和本地数据在模块、基类上的差异，以作针对性、选择性同步|\n|pont updateMod [modName]|选择性更新本地的模块|\n|pont updateBo [boName]|选择性更新本地的基类|\n\n### pontConfig\n- **originUrl**: swagger文档的json数据\n- **outDir**：生成的文件位置\n- **originType**：swagger文档类型 SwaggerV3/SwaggerV2\n- **templatePath**：生成的接口模板位置\n\n```json\n{\n    \"originUrl\": \"https://petstore.swagger.io/v2/swagger.json\",\n    \"outDir\": \"./apis\",\n    \"originType\": \"SwaggerV3\",\n    \"templatePath\": \"./pontTemplate\",\n}\n```\n\n\n\n### pontTemplate  // todo\n```ts\nexport default class MyGenerator extends CodeGenerator {}\n```",
    "html": "<p>https://blog.csdn.net/m0_65035567/article/details/130278459</p>\n<blockquote>\n<p>之前用过字节的ferry， 可以很方便讲thrift文件转成.d.ts类型定义和接口请求文件。但是ferry现在不开源，找到pont，可以把swagger转成ts。尝试接入现有的项目中</p>\n</blockquote>\n<h2>pont</h2>\n<p>pont是阿里出的一个工具，它可以非常方便的把后端的swagger文档转成ts提示类型，不仅如此，它还支持添加模板，直接生成对应的接口请求，甚至能帮我们生成请求参数的默认基类。</p>\n<p>Github：<a href=\"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Falibaba%2Fpont\" title=\"https://github.com/alibaba/pont\">github.com/alibaba/pon…</a></p>\n<h2>usage</h2>\n<ol>\n<li>全局安装 <code>yarn add -D pont-engine</code></li>\n<li>安装 vscode 插件 pont 以获取 pont 的全部能力</li>\n<li>进入项目目录，在项目中安装 pont-engine</li>\n<li>新建<code>pont-config.json</code>， 也可以<code>pont start</code>按照提示生成。 <a href=\"https://github.com/alibaba/pont/blob/master/docs/pontConfig.md\">配置参考</a></li>\n<li>新建<code>pontTemplate.ts</code> 生成自定义接口代码</li>\n</ol>\n<h2>API</h2>\n<h3>cmd</h3>\n<blockquote>\n<p>很奇怪，竟然没有代码生成的命令，只能利用vscode插件生成完成之后利用updateMod去更新</p>\n</blockquote>\n<p>|  cmd |  description |\n|---|---|\n|pont start|一键接入 pont，若本地存在 <a href=\"https://github.com/alibaba/pont/blob/master/docs/pontConfig.md\">pont-config.json</a>配置文件，将覆盖重复的配置项|\n|pont check|校验本地的 pont-lock.json 文件是否缺失、损坏。建议用户在项目中，在 pre-commit 里加上 pont check 命令，以防止在团队协作过程中，pont-lock.json 被误删、解决该文件冲突时被损坏等情况|\n|pont scan|扫描未使用的接口，在 process.cwd()位置生成并写入 unusedRequests.json 文件，需要配置 scannedRange。请参考 <a href=\"https://github.com/alibaba/pont/blob/master/docs/pontConfig.md\">pont-config.json 配置项</a>|\n|pont ls|查看所有数据源|\n|pont select [dsName]|切换当前数据源|\n|pont diff|查看远程数据和本地数据在模块、基类上的差异，以作针对性、选择性同步|\n|pont updateMod [modName]|选择性更新本地的模块|\n|pont updateBo [boName]|选择性更新本地的基类|</p>\n<h3>pontConfig</h3>\n<ul>\n<li><strong>originUrl</strong>: swagger文档的json数据</li>\n<li><strong>outDir</strong>：生成的文件位置</li>\n<li><strong>originType</strong>：swagger文档类型 SwaggerV3/SwaggerV2</li>\n<li><strong>templatePath</strong>：生成的接口模板位置</li>\n</ul>\n<pre><code class=\"language-json\">{\n    \"originUrl\": \"https://petstore.swagger.io/v2/swagger.json\",\n    \"outDir\": \"./apis\",\n    \"originType\": \"SwaggerV3\",\n    \"templatePath\": \"./pontTemplate\",\n}\n</code></pre>\n<h3>pontTemplate  // todo</h3>\n<pre><code class=\"language-ts\">export default class MyGenerator extends CodeGenerator {}\n</code></pre>"
  },
  "_id": "post/2023-12-28-swagger2ts-pont.md",
  "_raw": {
    "sourceFilePath": "post/2023-12-28-swagger2ts-pont.md",
    "sourceFileName": "2023-12-28-swagger2ts-pont.md",
    "sourceFileDir": "post",
    "contentType": "markdown",
    "flattenedPath": "post/2023-12-28-swagger2ts-pont"
  },
  "type": "Post",
  "id": ""
}